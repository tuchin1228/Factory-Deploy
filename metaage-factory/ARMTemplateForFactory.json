{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory 名稱",
			"defaultValue": "metaage-factory"
		},
		"AzureMySQL_connectionString": {
			"type": "secureString",
			"metadata": "'AzureMySQL' 的 'connectionString' 安全字串"
		},
		"AzureSQL_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSQL' 的 'connectionString' 安全字串"
		},
		"AzureStorage_accountKey": {
			"type": "secureString",
			"metadata": "'AzureStorage' 的 'accountKey' 安全字串"
		},
		"DockerSQL_connectionString": {
			"type": "secureString",
			"metadata": "'DockerSQL' 的 'connectionString' 安全字串"
		},
		"AzureStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storage0216.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CDC_Pipeline_Demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SQLtoSQLfeatCDC",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "53eac3b0-6c25-4067-9547-bffbf175e7eb"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SQLtoSQLfeatCDC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVtoSQLbyDataflowPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CSVtoSQLwithFilter",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-14T06:27:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CSVtoSQLwithFilter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SQLserverCDCtoMySQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "9c40188d-bc6d-4752-b64f-15130226c34c"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SQLserverCDCtoMySQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlStudentTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "studentID",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Grade",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Birthday",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "newstudent"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlNewStudentTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "studentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Grade",
						"type": "nvarchar"
					},
					{
						"name": "Birthday",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "newstudent"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlStudentTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "studentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Grade",
						"type": "nvarchar"
					},
					{
						"name": "Birthday",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "student"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DockerSqlStudentTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DockerSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "studentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nchar"
					},
					{
						"name": "Grade",
						"type": "nchar"
					},
					{
						"name": "Birthday",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Student"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DockerSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StudentCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Student.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "School DfE Number",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Username",
						"type": "String"
					},
					{
						"name": "Password",
						"type": "String"
					},
					{
						"name": "State ID",
						"type": "String"
					},
					{
						"name": "Secondary Email",
						"type": "String"
					},
					{
						"name": "Student Number",
						"type": "String"
					},
					{
						"name": "Middle Name",
						"type": "String"
					},
					{
						"name": "Grade",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Birthdate",
						"type": "String"
					},
					{
						"name": "Graduation Year",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DockerSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DockerSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDC_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CDC_Pipeline_Demo",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pipeline2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2023-03-01T11:47:00",
						"timeZone": "Taipei Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CDC_Pipeline_Demo')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DockerCDC')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2023-02-22T12:29:00",
						"timeZone": "Taipei Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVtoSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StudentCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlNewStudentTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          {School DfE Number} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Username as string,",
						"          Password as string,",
						"          {State ID} as string,",
						"          {Secondary Email} as string,",
						"          {Student Number} as string,",
						"          {Middle Name} as string,",
						"          Grade as string,",
						"          Status as string,",
						"          Birthdate as string,",
						"          {Graduation Year} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['SET IDENTITY_INSERT [dbo].[newstudent] ON'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          studentID = ID,",
						"          Name = Username,",
						"          Grade,",
						"          Birthday = Birthdate",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StudentCSV')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlNewStudentTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVtoSQLwithFilter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StudentCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlStudentTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          {School DfE Number} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Username as string,",
						"          Password as string,",
						"          {State ID} as string,",
						"          {Secondary Email} as string,",
						"          {Student Number} as string,",
						"          {Middle Name} as string,",
						"          Grade as string,",
						"          Status as string,",
						"          Birthdate as string,",
						"          {Graduation Year} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          ID,",
						"          Username,",
						"          Grade,",
						"          Birthdate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(greater(toInteger(Grade),10)) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          studentID = ID,",
						"          Name = Username,",
						"          Grade,",
						"          Birthday = Birthdate",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StudentCSV')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlStudentTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLserverCDCtoMySQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlStudentTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureMySqlStudentTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableNativeCdc: true,",
						"     netChanges: true,",
						"     skipInitialLoad: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     keys:['studentID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          studentID,",
						"          Name,",
						"          Grade,",
						"          Birthday",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlStudentTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlStudentTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLtoSQLfeatCDC')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlStudentTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlNewStudentTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableNativeCdc: true,",
						"     netChanges: true,",
						"     skipInitialLoad: false,",
						"     waterMarkColumn: 'studentID',",
						"     isolationLevel: 'NONE',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     keys:['studentID'],",
						"     format: 'table',",
						"     preSQLs:['SET IDENTITY_INSERT [dbo].[newstudent] ON'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          studentID,",
						"          Name,",
						"          Grade,",
						"          Birthday",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlStudentTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlNewStudentTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlStudentTable",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DockerSqlStudentTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     enableNativeCdc: true,",
						"     netChanges: true,",
						"     skipInitialLoad: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          studentID as integer,",
						"          Name as string,",
						"          Grade as string,",
						"          Birthday as string",
						"     ),",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     keys:['studentID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          studentID,",
						"          Name,",
						"          Grade,",
						"          Birthday",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlStudentTable')]",
				"[concat(variables('factoryId'), '/datasets/DockerSqlStudentTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MysqlCDC')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2023-03-01T12:50:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline2')]"
			]
		}
	]
}